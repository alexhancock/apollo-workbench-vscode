{"operations":{"GetSuggestedProductsForUser":"query GetSuggestedProductsForUser {\n\n}"},"queryPlans":{"GetSuggestedProductsForUser":""},"schemas":{"products":{"url":"","sdl":"type Product @key(fields: \"sku\") {\n  sku: String!\n  name: String\n}\n\ntype ProductRemovedError {\n  reason: String\n  similarProducts: [Product]\n}\n\nunion ProductResult = Product | ProductRemovedError\n\nextend type Query {\n  \"\"\"\n  Returns products for a not logged in user\n  \"\"\"\n  products: [Product]\n}\n\nextend type User @key(fields: \"id\") {\n  id: ID! @external\n  suggestedProducts: [Product]\n}\n","shouldMock":true},"accounts":{"url":"","sdl":"type User @key(fields: \"id\") {\n  id: ID!\n  firstName: String\n  lastName: String\n  description: String\n}\n\nextend type Query {\n  me: User\n}\n","shouldMock":true},"carts":{"url":"","sdl":"type Cart {\n  status: CartStatus\n  cartTotal: Float\n  items: [LineItem]\n}\n\ntype LineItem {\n  description: String\n  lineTotal: Float\n  quantity: Int\n  unitCost: Float\n}\n\nenum CartStatus {\n  DRAFT\n  DELETED\n  ORDER_PENDING\n  ORDER_CONFIRMED\n  ORDER_SHIPPING\n  ORDER_COMPLETE\n  IN_RESOLUTION\n}\n\nextend type User @key(fields: \"id\") {\n  id: ID! @external\n  activeCart: Cart\n  savedCarts: Cart\n}\n","shouldMock":true}},"composedSchema":"schema\n  @graph(name: \"products\", url: \"undefined\")\n  @graph(name: \"accounts\", url: \"undefined\")\n  @graph(name: \"carts\", url: \"undefined\")\n  @composedGraph(version: 1)\n{\n  query: Query\n}\n\ndirective @composedGraph(version: Int!) on SCHEMA\n\ndirective @graph(name: String!, url: String!) on SCHEMA\n\ndirective @owner(graph: String!) on OBJECT\n\ndirective @key(fields: String!, graph: String!) on OBJECT\n\ndirective @resolve(graph: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: String!) on FIELD_DEFINITION\n\ndirective @requires(fields: String!) on FIELD_DEFINITION\n\ntype Cart {\n  status: CartStatus\n  cartTotal: Float\n  items: [LineItem]\n}\n\nenum CartStatus {\n  DRAFT\n  DELETED\n  ORDER_PENDING\n  ORDER_CONFIRMED\n  ORDER_SHIPPING\n  ORDER_COMPLETE\n  IN_RESOLUTION\n}\n\ntype LineItem {\n  description: String\n  lineTotal: Float\n  quantity: Int\n  unitCost: Float\n}\n\ntype Product\n  @owner(graph: \"products\")\n  @key(fields: \"{ sku }\", graph: \"products\")\n{\n  sku: String!\n  name: String\n}\n\ntype ProductRemovedError {\n  reason: String\n  similarProducts: [Product]\n}\n\nunion ProductResult = Product | ProductRemovedError\n\ntype Query {\n  \"\"\"Returns products for a not logged in user\"\"\"\n  products: [Product] @resolve(graph: \"products\")\n  me: User @resolve(graph: \"accounts\")\n}\n\ntype User\n  @owner(graph: \"accounts\")\n  @key(fields: \"{ id }\", graph: \"accounts\")\n  @key(fields: \"{ id }\", graph: \"products\")\n  @key(fields: \"{ id }\", graph: \"carts\")\n{\n  id: ID!\n  firstName: String\n  lastName: String\n  description: String\n  suggestedProducts: [Product] @resolve(graph: \"products\")\n  activeCart: Cart @resolve(graph: \"carts\")\n  savedCarts: Cart @resolve(graph: \"carts\")\n}\n","graphName":"errors-with-unions"}