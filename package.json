{
  "name": "apollo-workbench-vscode",
  "displayName": "Apollo Workbench",
  "description": "Tooling to help you develop and mock federated schemas using Apollo Federation",
  "icon": "media/workbench.png",
  "version": "0.3.6",
  "publisher": "ApolloGraphQL",
  "engines": {
    "vscode": "^1.34.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:current-workbench-schemas"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "codegen": "apollo client:codegen --target=typescript  src/graphql/types --outputFlat",
    "vscode:prepublish": "npm run compile",
    "vscode:package": "vsce package",
    "compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx",
    "watch": "tsc -watch -p ./",
    "postinstall": "npm run compile",
    "test": "node ./out/__tests__/testsNoStatus.js",
    "test:ci": "node ./out/__tests__/githubCheckTests.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/graphql": "^14.5.0",
    "@types/lodash": "^4.14.165",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.14",
    "@types/vscode": "^1.34.0",
    "@typescript-eslint/eslint-plugin": "^3.0.2",
    "@typescript-eslint/parser": "^3.0.2",
    "eslint": "^7.1.0",
    "mocha": "^8.2.1",
    "typescript": "^4.0.2",
    "vsce": "^1.83.0",
    "vscode-test": "^1.4.1"
  },
  "dependencies": {
    "@apollo/client": "^3.2.5",
    "@apollo/federation": "^0.22.0",
    "@apollo/gateway": "^0.25.0",
    "@apollo/query-planner": "0.0.13",
    "@apollographql/graphql-language-service-interface": "^2.0.2",
    "@types/archiver": "^5.1.0",
    "apollo-language-server": "^1.24.1",
    "apollo-server": "^2.19.0",
    "apollo-server-plugin-operation-registry": "^0.7.2",
    "archiver": "^5.2.0",
    "chokidar": "^3.4.3",
    "faker": "^5.4.0",
    "graphql": "^14.7.0",
    "graphql-language-service-interface": "^2.4.2",
    "graphql-language-service-parser": "^1.6.4",
    "graphql-language-service-utils": "^2.4.3",
    "lodash": "^4.17.20",
    "node-fetch": "^2.6.1",
    "vscode-languageclient": "^6.1.3"
  },
  "contributes": {
    "configuration": {
      "title": "Apollo-Workbench",
      "properties": {
        "apollo-workbench.apolloApiUrl": {
          "type": [
            "string"
          ],
          "default": "https://graphql.api.apollographql.com/api/graphql",
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.apolloOrg": {
          "type": [
            "string"
          ],
          "default": "",
          "description": "This setting is meant to hardcode the org used"
        },
        "apollo-workbench.gatewayPort": {
          "type": [
            "number"
          ],
          "default": 4000,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.startingServerPort": {
          "type": [
            "number"
          ],
          "default": 4001,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.gatewayReCompositionInterval": {
          "type": [
            "number"
          ],
          "default": 10000,
          "description": "Specifies the interval the Apollo Gateway will try re-composing it's schema in ms"
        },
        "apollo-workbench.graphApiKey": {
          "type": [
            "string"
          ],
          "default": "",
          "description": "Specifies the gateway apikey to be used for the Apollo Studio Graph. This will enable operation registry if `apollo-workbench.runOperationRegistry` is set to `true`"
        },
        "apollo-workbench.graphVariant": {
          "type": [
            "string"
          ],
          "default": "current",
          "description": "Specifies the gateway graph variant to be used for the Apollo Studio Graph. This will change operation registry if `apollo-workbench.runOperationRegistry` is set to `true`"
        },
        "apollo-workbench.daysOfOperationsToFetch": {
          "type": [
            "number"
          ],
          "default": 30,
          "description": "Specifies the number of days to select operations from Apollo Studio (to current day)"
        },
        "apollo-workbench.runOperationRegistry": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Specifies the url endpoint to be used for the Apollo Studio Graph"
        },
        "apollo-workbench.displayGettingStarted": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Specifies whether to display the 'Getting Started' section is shown in the 'Local Schema Files' TreeView"
        },
        "apollo-workbench.displayExampleGraphs": {
          "type": [
            "boolean"
          ],
          "default": true,
          "description": "Specifies whether to display the 'Example Graphs' section is shown in the 'Apollo Studio Graphs' TreeView"
        },
        "apollo-workbench.tlsRejectUnauthorized": {
          "type": [
            "boolean"
          ],
          "default": false,
          "description": "Specifies whether to set `NODE_TLS_REJECT_UNAUTHORIZED=0` or not. `NODE_TLS_REJECT_UNAUTHORIZED=0` is the default to avoid enterprise cert issues in development - Note this should never be done in production"
        },
        "apollo-workbench.headersToForwardFromGateway": {
          "type": "array",
          "default": [],
          "description": "Specifies what headers should be forwarded from the gateway to downstream mocked services"
        }
      }
    },
    "commands": [
      {
        "command": "extension.gettingStarted",
        "title": "Getting Started"
      },
      {
        "command": "extension.openFolder",
        "title": "Open Folder",
        "category": "Apollo Workbench"
      },
      {
        "command": "extension.newWorkbench",
        "title": "Create New Workbench",
        "category": "Apollo Workbench",
        "icon": "$(add)"
      },
      {
        "command": "extension.enterStudioApiKey",
        "title": "Login to Apollo",
        "category": "Apollo Workbench",
        "icon": "$(log-in)"
      },
      {
        "command": "extension.deleteStudioApiKey",
        "title": "Logout of Apollo",
        "category": "Apollo Workbench",
        "icon": "$(log-out)"
      },
      {
        "command": "extension.startMocks",
        "title": "Start Mocked Servers",
        "category": "Apollo Workbench",
        "icon": "$(play)",
        "enablement": "true"
      },
      {
        "command": "extension.stopMocks",
        "title": "Stop Mocked Servers",
        "category": "Apollo Workbench",
        "icon": "$(debug-stop)"
      },
      {
        "command": "local-workbench-files.loadFile",
        "title": "Load Workbench File",
        "icon": "$(arrow-up)"
      },
      {
        "command": "local-workbench-files.renameGraph",
        "title": "Rename Workbench Graph"
      },
      {
        "command": "local-workbench-files.deleteFile",
        "title": "Delete Workbench File",
        "icon": "$(trash)"
      },
      {
        "command": "local-workbench-files.duplicateFile",
        "title": "Duplicate Workbench File"
      },
      {
        "command": "local-workbench-files.refresh",
        "title": "Refresh local workbench files",
        "icon": "$(refresh)"
      },
      {
        "command": "local-workbench-files.exportProject",
        "title": "Export selected workbench to templated project",
        "icon": "$(export)"
      },
      {
        "command": "local-workbench-files.dockerize",
        "title": "Create Docker Image"
      },
      {
        "command": "current-workbench-schemas.refreshSchemas",
        "title": "Refresh Current Workbench",
        "icon": "$(refresh)"
      },
      {
        "command": "current-workbench-schemas.editSchema",
        "title": "Edit Service",
        "icon": "$(edit)"
      },
      {
        "command": "current-workbench-schemas.renameSchema",
        "title": "Rename Service"
      },
      {
        "command": "current-workbench-schemas.addSchema",
        "title": "Add Service",
        "icon": "$(add)"
      },
      {
        "command": "current-workbench-schemas.deleteSchema",
        "title": "Delete Service",
        "icon": "$(trash)"
      },
      {
        "command": "current-workbench-schemas.shouldMockSchema",
        "title": "Set as Mock Service"
      },
      {
        "command": "current-workbench-schemas.disableMockSchema",
        "title": "Disable Mocks (use URL instead)"
      },
      {
        "command": "current-workbench-schemas.setUrlForService",
        "title": "Set URL for Service"
      },
      {
        "command": "current-workbench-schemas.updateSchemaFromUrl",
        "title": "Update Schema from URL"
      },
      {
        "command": "current-workbench-schemas.viewSettings",
        "title": "View Settings for Service",
        "icon": "$(gear)"
      },
      {
        "command": "current-workbench-schemas.viewCustomMocks",
        "title": "View Custom Mocks for Service",
        "icon": "$(database)"
      },
      {
        "command": "current-workbench-schemas.exportSchema",
        "title": "Export Schema for a Service",
        "icon": "$(desktop-download)"
      },
      {
        "command": "current-workbench-schemas.exportResolvers",
        "title": "Export Example Federation Entity Resolvers for a Service"
      },
      {
        "command": "current-workbench-schemas.exportGraphCoreSchema",
        "title": "Export Core Schema for Graph",
        "icon": "$(desktop-download)"
      },
      {
        "command": "current-workbench-schemas.exportGraphSchema",
        "title": "Export Schema for a Graph",
        "icon": "$(desktop-download)"
      },
      {
        "command": "current-workbench-operations.editOperation",
        "title": "Edit Operation",
        "icon": "$(edit)"
      },
      {
        "command": "current-workbench-operations.addOperation",
        "title": "Add Operation",
        "icon": "$(add)"
      },
      {
        "command": "current-workbench-operations.deleteOperation",
        "title": "Delete Operation",
        "icon": "$(trash)"
      },
      {
        "command": "current-workbench-operations.openQueryPlan",
        "title": "Open Query Plan",
        "icon": "$(output)"
      },
      {
        "command": "current-workbench-operations.viewQueryPlan",
        "title": "View Operation Query Plan",
        "icon": "$(compare-changes)"
      },
      {
        "command": "current-workbench-operations.refreshOperations",
        "title": "Refresh Current Workbench Operations",
        "icon": "$(refresh)"
      },
      {
        "command": "local-workbench-files.loadFile",
        "title": "Load Workbench File",
        "icon": "$(arrow-up)"
      },
      {
        "command": "local-workbench-files.deleteFile",
        "title": "Delete Workbench File",
        "icon": "$(trash)"
      },
      {
        "command": "local-workbench-files.duplicateFile",
        "title": "Duplicate Workbench File"
      },
      {
        "command": "local-workbench-files.refresh",
        "title": "Refresh local workbench files",
        "icon": "$(refresh)"
      },
      {
        "command": "studio-graphs.createWorkbenchFromGraph",
        "title": "Create Workbench File from Graph"
      },
      {
        "command": "studio-graphs.createWorkbenchFromPreloaded",
        "title": "Create Workbench File from Example"
      },
      {
        "command": "studio-graphs.createWorkbenchFromGraphWithVariant",
        "title": "Create Workbench File from Graph"
      },
      {
        "command": "studio-graphs.refresh",
        "title": "Refresh Graphs",
        "icon": "$(refresh)"
      },
      {
        "command": "studio-graphs.switchOrg",
        "title": "Switch Apollo Studio Org",
        "category": "Apollo Workbench"
      },
      {
        "command": "studio-graphs.loadOperations",
        "title": "Load Graph Operations"
      },
      {
        "command": "studio-operations.addToWorkbench",
        "title": "Add Operation to Current Workbench",
        "icon": "$(add)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "apollo-workbench",
          "title": "Apollo Workbench",
          "icon": "media/workbench.svg"
        }
      ]
    },
    "views": {
      "apollo-workbench": [
        {
          "id": "local-workbench-files",
          "name": "Local Workbench Files"
        },
        {
          "id": "current-workbench-schemas",
          "name": "Current Workbench Services"
        },
        {
          "id": "current-workbench-operations",
          "name": "Current Workbench Operations"
        },
        {
          "id": "studio-graphs",
          "name": "Apollo Studio Graphs"
        },
        {
          "id": "studio-operations",
          "name": "Apollo Studio Graph Operations",
          "visibility": "collapsed"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "extension.startMocks",
          "when": "view == local-workbench-files",
          "group": "navigation@2"
        },
        {
          "command": "extension.stopMocks",
          "when": "view == local-workbench-files",
          "group": "navigation@3"
        },
        {
          "command": "extension.newWorkbench",
          "when": "view == local-workbench-files",
          "group": "navigation@1"
        },
        {
          "command": "local-workbench-files.refresh",
          "when": "view == local-workbench-files",
          "group": "navigation@4"
        },
        {
          "command": "current-workbench-schemas.addSchema",
          "when": "view == current-workbench-schemas",
          "group": "navigation@1"
        },
        {
          "command": "current-workbench-schemas.refreshSchemas",
          "when": "view == current-workbench-schemas",
          "group": "navigation@1"
        },
        {
          "command": "current-workbench-operations.addOperation",
          "when": "view == current-workbench-operations",
          "group": "navigation"
        },
        {
          "command": "current-workbench-operations.refreshOperations",
          "when": "view == current-workbench-operations",
          "group": "navigation"
        },
        {
          "command": "studio-graphs.refresh",
          "when": "view == studio-graphs",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "current-workbench-schemas.renameSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "1@1"
        },
        {
          "command": "current-workbench-schemas.setUrlForService",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "1@2"
        },
        {
          "command": "current-workbench-schemas.updateSchemaFromUrl",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "1@3"
        },
        {
          "command": "current-workbench-schemas.viewSettings",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "1@4"
        },
        {
          "command": "current-workbench-schemas.shouldMockSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "2@1"
        },
        {
          "command": "current-workbench-schemas.viewCustomMocks",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "2@2"
        },
        {
          "command": "current-workbench-schemas.disableMockSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "2@3"
        },
        {
          "command": "current-workbench-schemas.viewSettings",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "inline"
        },
        {
          "command": "current-workbench-schemas.exportSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "3@1"
        },
        {
          "command": "current-workbench-schemas.exportResolvers",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "3@1"
        },
        {
          "command": "current-workbench-schemas.exportGraphCoreSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchGraphSchemaTreeItem",
          "group": "4@1"
        },
        {
          "command": "current-workbench-schemas.exportGraphSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchGraphSchemaTreeItem",
          "group": "4@2"
        },
        {
          "command": "current-workbench-schemas.deleteSchema",
          "when": "view == current-workbench-schemas && viewItem == workbenchSchemaTreeItem",
          "group": "4"
        },
        {
          "command": "current-workbench-operations.deleteOperation",
          "when": "view == current-workbench-operations && viewItem == workbenchOperationTreeItem",
          "group": "2"
        },
        {
          "command": "current-workbench-operations.openQueryPlan",
          "when": "view == current-workbench-operations && viewItem == workbenchOperationTreeItem",
          "group": "inline"
        },
        {
          "command": "current-workbench-operations.openQueryPlan",
          "when": "view == current-workbench-operations && viewItem == workbenchOperationTreeItem",
          "group": "1"
        },
        {
          "command": "local-workbench-files.renameGraph",
          "when": "view == local-workbench-files && viewItem == workbenchFileTreeItem",
          "group": "1@1"
        },
        {
          "command": "local-workbench-files.duplicateFile",
          "when": "view == local-workbench-files && viewItem == workbenchFileTreeItem",
          "group": "1@2"
        },
        {
          "command": "local-workbench-files.exportProject",
          "when": "view == local-workbench-files && viewItem == workbenchFileTreeItem",
          "group": "1@3"
        },
        {
          "command": "local-workbench-files.deleteFile",
          "when": "view == local-workbench-files && viewItem == workbenchFileTreeItem",
          "group": "2"
        },
        {
          "command": "studio-graphs.createWorkbenchFromGraph",
          "when": "view == studio-graphs && viewItem == studioGraphTreeItem"
        },
        {
          "command": "studio-graphs.createWorkbenchFromPreloaded",
          "when": "view == studio-graphs && viewItem == preloadedWorkbenchFile"
        },
        {
          "command": "studio-graphs.createWorkbenchFromGraphWithVariant",
          "when": "view == studio-graphs && viewItem == studioGraphVariantTreeItem"
        },
        {
          "command": "studio-operations.addToWorkbench",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem",
          "group": "inline"
        },
        {
          "command": "studio-operations.addToWorkbench",
          "when": "view == studio-operations && viewItem == studioOperationTreeItem"
        }
      ]
    }
  }
}
