# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      #Checkout Source Code
      - name: 'Checkout source code'
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
      #Bump version
      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: ''
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      #Setup project and package extension
      - run: npm install
      - run: npm install vsce -g
      - run: npm run vscode:package
      - id: set-version-number
        run: echo "::set-output name=VERSION::$(echo ${{ steps.version-bump.outputs.newTag }} | cut -c 2-)"
      - run: echo ${{ steps.set-version-number.outputs.VERSION }}

      #Create new release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      #Upload VSIX to release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./apollo-workbench-vscode-${{ env.NEW_TAG }}.vsix
          asset_name: apollo-workbench-vscode-${{ env.NEW_TAG }}.vsix
          asset_content_type: application/vsix

      #Upload binary to release
      # - name: 'Upload binaries to release'
      #   uses: svenstaro/upload-release-action@v2
      #   env:
      #     NEW_TAG: ${{ steps.set-version-number.outputs.VERSION }}
      #   with:
      #     repo_token: ${{ secrets.RELEASE_TOKEN }}
      #     file: './apollo-workbench-vscode-${{ env.NEW_TAG }}.vsix'
      #     asset_name: 'apollo-workbench-vscode-${{ env.NEW_TAG }}.vsix'
      #     tag: ${{ env.NEW_TAG }}
      #     overwrite: true
      #     body: ${{ github.event_name }}
